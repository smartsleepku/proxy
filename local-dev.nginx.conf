upstream auth {
  server auth:3000 fail_timeout=20s max_fails=5;
}
upstream activity {
  server activity:7000 fail_timeout=20s max_fails=5;
}
upstream survey {
  server survey:80 fail_timeout=20s max_fails=5;
}
server {
  # The main routing definition:
  listen 8080;

  location /haslocation {
    expires 0;
    return 200 '{"has_location": true}';
  }

  location / {
    auth_request /auth/validate;
    auth_request_set $auth_status $upstream_status;
    include proxy_params;
    proxy_pass http://survey/;
  }

  location /tmp/assets {
    include proxy_params;
    proxy_pass http://survey;
  }

  location /activity {
    auth_request /auth/validate;
    auth_request_set $auth_status $upstream_status;
    expires 0;
    include proxy_params;
    proxy_pass http://activity;
  }

  location /rest {
    auth_request /auth/validate;
    auth_request_set $auth_status $upstream_status;
    expires 0;
    include proxy_params;
    proxy_pass http://activity;
  }

  location /attendee {
    auth_request /auth/validate;
    auth_request_set $auth_status $upstream_status;
    expires 0;
    include proxy_params;
    proxy_pass http://activity;
  }

  location /sleep {
    auth_request /auth/validate;
    auth_request_set $auth_status $upstream_status;
    expires 0;
    include proxy_params;
    proxy_pass http://activity;
  }

  location /heartbeat {
    auth_request /auth/validate;
    auth_request_set $auth_status $upstream_status;
    expires 0;
    include proxy_params;
    proxy_pass http://activity;
  }

  location /debug {
    auth_request /auth/validate;
    auth_request_set $auth_status $upstream_status;
    expires 0;
    include proxy_params;
    proxy_pass http://activity;
  }

  location /auth/validate {
    internal;
    include proxy_params;
    proxy_pass http://auth;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header X-Original-URI $request_uri;
  }

  location /auth {
    expires 0;
    include proxy_params;
    proxy_pass http://auth;
  }
}
